name: Build JavaFX App

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    name: Build and Package
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
        include:
          - os: windows-latest
            installer-type: exe
            icon: src/main/resources/icon.ico
          - os: macos-latest
            installer-type: dmg
            icon: src/main/resources/icon.icns

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build with Maven
        run: mvn -B clean package --file pom.xml

      - name: Create output directory
        run: mkdir -p output

      - name: Create native installer
        shell: bash
        run: |
          jpackage \
            --input target \
            --main-jar Move_arm-1.0-SNAPSHOT.jar \
            --main-class com.example.move_arm.Launcher \
            --name "MoveArm" \
            --app-version "1.0" \
            --type ${{ matrix.installer-type }} \
            --dest output \
            --vendor "MoveArm Team" \
            --copyright "Copyright 2024" \
            --description "MoveArm Application" \
            --java-options "-Xmx512m" \
            --java-options "--add-modules javafx.controls,javafx.fxml"
        env:
          JAVA_HOME: ${{ env.JAVA_HOME }}

      - name: List output files
        run: ls -la output/

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: MoveArm-${{ matrix.os }}
          path: output/
          retention-days: 30