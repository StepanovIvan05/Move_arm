name: Build JavaFX App

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build for Windows and macOS
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn -B clean package

      # ---- Windows package (.exe) ----
      - name: Package for Windows
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          mkdir output
          $JPACKAGE = "${env:JAVA_HOME}\bin\jpackage.exe"

          & $JPACKAGE `
            --input target `
            --main-jar Move_arm-1.0-SNAPSHOT.jar `
            --main-class com.example.move_arm.HelloApplication `
            --name "MoveArm" `
            --app-version 1.0 `
            --type exe `
            --dest output `
            --win-menu `
            --win-menu-group "Move Arm" `
            --win-shortcut `
            --win-dir-chooser `
            --runtime-image "${env:JAVA_HOME}" `
            --java-options "--add-modules javafx.controls,javafx.fxml"

      # ---- macOS package (.dmg) ----
      - name: Package for macOS
        if: matrix.os == 'macos-latest'
        run: |
          mkdir output
          jpackage \
            --input target \
            --main-jar Move_arm-1.0-SNAPSHOT.jar \
            --main-class com.example.move_arm.HelloApplication \
            --name MoveArm \
            --app-version 1.0 \
            --type dmg \
            --dest output \
            --java-options "--module-path target/lib --add-modules javafx.controls,javafx.fxml"

      # ---- Upload artifacts ----
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: MoveArm-${{ matrix.os }}
          path: output
